Need to validate basically all of the incoming info.
-> Assigned to MP.

Make passwords be a mix of numbers / letters / symbols?
-> Assigned to MP.

Find a way to pass a handle to the DB pool to different routes so it doesn't 
have to reinitialize every time...
-> In progress, still could be better. Keeping this up for now.

Also worth mentioning is putting the imdb query into json and having it validated
with the Validator crate like login and register.
-> imdb query is currently in json but isn't validated. Looked into it a bit
-> and basically we do all our own validating so it's probably not worth it. But
-> gonna keep this up for now.

Need to make authentication a layer on routes instead of an endpoint. Basically
everything except the autocomplete should route requests through the auth flow.
-> Currently 2 seperate auth endpoints which is really weird...

2 functions in /auth to generate either a single or double token is a bit much... 
Should refactor and get this into a single function and check what the request needs or wants.

Look a bit more into the error types, for auth it'd be nice to match on error types and
proceed accordingly instead of matching on status codes...

Maybe want a bigger datastructure for all my JWT stuff, and then can use methods instead
of a bunch of free-standing functions.

Is there are better way to do error handling than tons and tons of map_err? Could send this off to
a big function that matches on error types and does it that way. Would really clean things up.

Could DB functions be implementations on structs? Would be pretty nice.

Why does warp_back have a lib? Does it matter at all?

What's up with the weird tuple return type on warp filters?? -> impl (Reply, )

Always more tests, but fine for now.


